#######################################
### - Live Demo - Btech Bicara #3 - ###
#######################################

OS: CentOS 8
Use non-root user

#1. Install Dependencies
sudo dnf install -y python3-devel libffi-devel gcc openssl-devel python3-libselinux

#2. Setup python virtual environment
python3 -m venv kolla
source kolla/bin/activate

#3. Upgrade pip
pip install -U pip

#4. Install kolla-ansible & ansible
pip install 'ansible<2.10' kolla-ansible==9.2.0

#5. Create /etc/kolla directory
sudo mkdir -p /etc/kolla
sudo chown $USER:$USER /etc/kolla

#6. Copy globals.yml and password.yml to /etc/kolla directory
cp -r kolla/share/kolla-ansible/etc_examples/kolla/* /etc/kolla

#7. Copy all-in-one inventory file to the current directory
cp kolla/share/kolla-ansible/ansible/inventory/multinode .

#8. Configure ansible
sudo mkdir /etc/ansible
sudo bash -c 'cat<<EOF > /etc/ansible/ansible.cfg
[defaults]
host_key_checking=False
pipelining=True
forks=100
EOF'

#9. Generate openstack password
kolla-genpwd

#10. Edit globals.yml
cat<<EOF > /etc/kolla/globals.yml
kolla_base_distro: "centos"
kolla_install_type: "binary"
openstack_release: "train"
kolla_internal_vip_address: "10.10.100.6"
kolla_external_vip_address: "10.10.100.7"
network_interface: "eth0"
neutron_external_interface: "eth1"
enable_openstack_core: "yes"
enable_cinder: "yes"
enable_cinder_backup: "no"
enable_magnum: "yes"
enable_cinder_backend_lvm: "yes"
enable_neutron_provider_networks: "yes"
nova_compute_virt_type: "kvm"
EOF

#11. Create lvm for cinder
sudo dnf install -y lvm2
sudo pvcreate /dev/vdb
sudo vgcreate cinder-volumes /dev/vdb

#12. Modify magnum.conf
mkdir -p /etc/kolla/config/
cat<<EOF > /etc/kolla/config/magnum.conf
[cinder]
default_docker_volume_type = VT1
 
[trust]
cluster_user_trust = True
EOF

#13. bootstrap, prechecks, deploy, & post-deploy
sudo dnf install -y epel-release
sudo dnf install -y screen
screen -R kolla
kolla-ansible -i all-in-one bootstrap-servers
kolla-ansible -i all-in-one prechecks
kolla-ansible -i all-in-one deploy
kolla-ansible -i all-in-one post-deploy

#14. Run init-runonce.sh

#15. Install openstack client
source kolla/bin/activate
pip install python-openstackclient python-magnumclient python-heatclient

#16. Create flavor for magnum instance
source /etc/kolla/admin-openrc.sh
sudo chown $USER:$USER /etc/kolla/admin-openrc.sh
openstack flavor create m0-kubernetes --disk 20 --vcpu 4 --ram 4096 --public

#17. Download Fedore-CoreOS
sudo dnf install -y wget
wget https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/32.20200726.3.1/x86_64/fedora-coreos-32.20200726.3.1-openstack.x86_64.qcow2.xz
unxz fedora-coreos-32.20200726.3.1-openstack.x86_64.qcow2.xz

#18. Upload the image to glance
openstack image create \
  --file fedora-coreos-32.20200726.3.1-openstack.x86_64.qcow2 \
  --disk-format qcow2 \
  --container-format=bare \
  --property os_distro=fedora-coreos \
  --property os_admin_user=core \
  --public \
  Fedora-CoreOS-32

#19. Create Volume Type
openstack volume type create --property volume_backend_name=lvm-1 VT1

#20. Create Cluster Template
openstack coe cluster template create k8s-btech-bicara \
    --image Fedora-CoreOS-32 \
    --external-network public1 \
    --dns-nameserver 8.8.8.8 \
    --flavor m0-kubernetes \
    --master-flavor m0-kubernetes \
    --docker-volume-size 5 \
    --network-driver flannel \
    --coe kubernetes \
    --volume-driver cinder

#21. Create Cluster
openstack coe cluster create k8s-cluster-btech-bicara --keypair mykey \
  --cluster-template k8s-btech-bicara \
  --labels keystone_auth_enabled=true,kube_tag=v1.18.6,cloud_provider_enabled=true,cinder_csi_enabled=true,cinder_csi_plugin_tag=v1.18.0